!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.10 (r5363) -  9 Sep 2014 09:53
!
!  Differentiation of pt in forward (tangent) mode (with options i4 dr8 r4):
!   variations   of useful results: pt
!   with respect to varying inputs: params
!   RW status of diff variables: params:in pt:out
REAL FUNCTION PT_D(params, paramsd, c_hist, i_hist, pt)
  IMPLICIT NONE
  REAL, INTENT(IN) :: params(3), c_hist(y), i_hist(y), y
  REAL, INTENT(IN) :: paramsd(3)
  USE COMMON_D
  REAL :: b(y), q, yi
  REAL :: bd(y), qd
  REAL :: r
  REAL :: rd
  INTRINSIC EXP
  INTEGER :: k
  REAL :: p
  REAL :: pd
  INTRINSIC SUM
  REAL :: pwx1
  REAL :: pwx1d
  REAL :: pwr1
  REAL :: pwr1d
  REAL, DIMENSION(y) :: arg1
  REAL, DIMENSION(y) :: arg1d
  REAL :: pt
  rd = paramsd(1)*EXP(params(1))
  r = EXP(params(1))
  k = EXP(params(2))
  pd = paramsd(3)*EXP(params(3))
  p = EXP(params(3))
  b(1) = k
  bd = 0.0
  DO yi=2,y
    pwx1d = bd(yi-1)/k
    pwx1 = b(yi-1)/k
    IF (pwx1 .GT. 0.0) THEN
      pwr1d = pwx1**p*(LOG(pwx1)*pd+p*pwx1d/pwx1)
    ELSE IF (pwx1 .EQ. 0.0) THEN
      IF (p .EQ. 1.0) THEN
        pwr1d = pwx1d
      ELSE
        pwr1d = 0.0
      END IF
    ELSE IF (p .EQ. INT(p)) THEN
      pwr1d = p*pwx1**(p-1)*pwx1d
    ELSE
      pwr1d = 0.0
    END IF
    pwr1 = pwx1**p
    bd(yi) = bd(yi-1) + ((rd*b(yi-1)+r*bd(yi-1))*p-r*b(yi-1)*pd)*(1.0-&
&     pwr1)/p**2 - r*b(yi-1)*pwr1d/p
    b(yi) = b(yi-1) + r*b(yi-1)/p*(1.0-pwr1) - c_hist(yi-1)
  END DO
  qd = -(SUM(i_hist)*SUM(bd)/SUM(b)**2)
  q = SUM(i_hist)/SUM(b)
  arg1d(:) = 2*(q*b-i_hist)*(qd*b+q*bd)
  arg1(:) = (q*b-i_hist)**2
  pt_d = SUM(arg1d(:))
  pt = SUM(arg1(:))
  RETURN
END FUNCTION PT_D
